{"version":3,"sources":["webpack:///./src/components/largeImage.js"],"names":["LargeImage","props","query","render","data","image","images","edges","find","n","node","relativePath","includes","filename","imageFluid","childImageSharp","fixed","alt","split","id"],"mappings":"mNAqCeA,IAjCI,SAAAC,GAAK,OACtB,kBAAC,cAAD,CACEC,MAAK,aAiBLC,OAAQ,SAAAC,GACN,IAAMC,EAAQD,EAAKE,OAAOC,MAAMC,MAAK,SAAAC,GACnC,OAAOA,EAAEC,KAAKC,aAAaC,SAASX,EAAMY,aAE5C,IAAKR,EACH,OAAO,KAGT,IAAMS,EAAaT,EAAMK,KAAKK,gBAAgBC,MAC3CC,EAAMhB,EAAMY,SAASK,MAAM,KAAK,GACnC,OAAO,kBAAC,IAAD,CAAKD,IAAKA,EAAKD,MAAOF,EAAYK,GAAIF,KA5BjD,W","file":"08a59bd44c6197682a196c9855682be726755889-ab6ec0da6b5d5f26ccfd.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst LargeImage = props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        images: allFile {\r\n          edges {\r\n            node {\r\n              relativePath\r\n              name\r\n              childImageSharp {\r\n                fixed(width: 470, height: 300) {\r\n                  ...GatsbyImageSharpFixed\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const image = data.images.edges.find(n => {\r\n        return n.node.relativePath.includes(props.filename)\r\n      })\r\n      if (!image) {\r\n        return null\r\n      }\r\n      \r\n      const imageFluid = image.node.childImageSharp.fixed\r\n     let alt = props.filename.split(\".\")[0]\r\n      return <Img alt={alt} fixed={imageFluid} id={alt} />\r\n    }}\r\n  />\r\n)\r\nexport default LargeImage"],"sourceRoot":""}