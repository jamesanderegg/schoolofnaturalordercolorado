{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["GridWrapper","styled","div","HeaderStyle","h1","LeftWrapper","ClassList","Class","ClassHeader","h4","ClassTitle","p","ClassSubTitle","PayPal","PayPalImage","FormWrapper","ContactPage","useState","name","email","subject","mapleSyrup","message","values","setValue","formSent","setFormSent","errors","setErrors","updateValue","e","value","target","type","parseInt","a","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","status","checkForm","preventDefault","Object","keys","map","push","length","handleSubmit","title","href","filename","onSubmit","style","alignContent","textAlign","margin","id","placeholder","width","onChange","className","rows","error","i","key","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-contact-js-8b1c2a1622ad441074e3.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport styled from \"styled-components\"\r\nimport SmallImage from \"../components/smallImage\"\r\n\r\nconst GridWrapper = styled.div`\r\n  margin: 0 40px;\r\n  display: grid;\r\n\r\n  grid-template-columns: 1fr 1fr;\r\n`\r\nconst HeaderStyle = styled.h1`\r\n  margin: 170px 0 10px;\r\n`\r\nconst LeftWrapper = styled.div`\r\n  display: grid;\r\n  \r\n`\r\nconst ClassList = styled.div`\r\n  \r\n`\r\nconst Class = styled.div``\r\nconst ClassHeader = styled.h4``\r\nconst ClassTitle = styled.p`\r\n  margin: 0 20px;\r\n  text-align: start;\r\n  font-weight: bold;\r\n  font-size: small;\r\n`\r\nconst ClassSubTitle = styled.p`\r\n  font-size: smaller;\r\n`\r\n\r\nconst PayPal = styled.div`\r\n  width: 100%;\r\n  align-items: center;\r\n  margin: auto;\r\n`;\r\nconst PayPalImage = styled.div`\r\n  max-width: 300px;\r\n  margin:auto;\r\n`;\r\nconst FormWrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ContactPage = () => {\r\n  const [values, setValue] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    mapleSyrup: \"\",\r\n    message: \"\",\r\n  })\r\n  const [formSent, setFormSent] = useState(false)\r\n  const [errors, setErrors] = useState([])\r\n\r\n  function updateValue(e) {\r\n    // check if its a number and convert\r\n    let { value } = e.target\r\n    if (e.target.type === \"number\") {\r\n      value = parseInt(e.target.value)\r\n    }\r\n\r\n    setValue({\r\n      ...values,\r\n      [e.target.name]: value,\r\n    })\r\n  }\r\n\r\n  async function handleSubmit(values) {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: values.name,\r\n        email: values.email,\r\n        message: values.message,\r\n        subject: values.subject,\r\n      }),\r\n    }\r\n    fetch(\"https://www.jamesanderegg.com/snoc_form\", requestOptions).then(\r\n      response => {\r\n        if (response.status === 200) {\r\n          //form successful\r\n          //clear errors\r\n          setErrors([])\r\n          //clear form\r\n          setValue({\r\n            name: \"\",\r\n            email: \"\",\r\n            subject: \"\",\r\n            mapleSyrup: \"\",\r\n            message: \"\",\r\n          })\r\n          //set form sent to true and display Success\r\n          setFormSent(true)\r\n        } else {\r\n          //clear form\r\n          setValue({\r\n            name: \"\",\r\n            email: \"\",\r\n            subject: \"\",\r\n            mapleSyrup: \"\",\r\n            message: \"\",\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const checkForm = e => {\r\n    e.preventDefault()\r\n    let errors = []\r\n    // check if maple syrup is empty\r\n    // check if other fields are empty\r\n\r\n    Object.keys(values).map(value => {\r\n      //catch the honey pot and check if it is empty. if not empty === bad\r\n      if (value === \"mapleSyrup\") {\r\n        if (values[value] !== \"\") {\r\n          // Do Not submit form\r\n          errors.push(value)\r\n        }\r\n        return\r\n      } else {\r\n        //check for empty values\r\n        if (values[value] === \"\") {\r\n          errors.push(value)\r\n        }\r\n      }\r\n    })\r\n    if (errors.length !== 0) {\r\n      //if errors do not submit form\r\n      setErrors(errors)\r\n    } else {\r\n      setErrors(errors)\r\n      handleSubmit(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Contact\" />\r\n      <HeaderStyle>Contact us</HeaderStyle>\r\n      <GridWrapper>\r\n        <LeftWrapper>\r\n          <ClassList>\r\n            <ClassHeader>Class List:</ClassHeader>\r\n            <Class>\r\n              <ClassTitle>\r\n                The Natural Order Process\". The Yoga Sutras of Patanjali\r\n              </ClassTitle>\r\n              <ClassSubTitle>\r\n                {\" \"}\r\n                - Classes will resume Monday on February 1, 2021 at 7:30 pm MTN.\r\n              </ClassSubTitle>\r\n            </Class>\r\n            <Class>\r\n              <ClassTitle>\"Practice of the Way\" by Vitvan.</ClassTitle>\r\n              <ClassSubTitle>\r\n                {\" \"}\r\n                - Begins Sunday on January 31st at 11:30 am MTN.\r\n              </ClassSubTitle>\r\n            </Class>\r\n            <Class>\r\n              <ClassTitle>\"Steps in Self-Unfoldment\" by Vitvan.</ClassTitle>\r\n              <ClassSubTitle>\r\n                {\" \"}\r\n                - Begins Sunday on February 7th at 9:30 am MTN.\r\n              </ClassSubTitle>\r\n            </Class>\r\n            <Class>\r\n              <ClassTitle>\"A Treatise of Faith\" by Vitvan.</ClassTitle>\r\n              <ClassSubTitle>\r\n                {\" \"}\r\n                - Presented every Wednesday at 7:30 pm MTN.\r\n              </ClassSubTitle>\r\n            </Class>\r\n          </ClassList>\r\n          <PayPal>\r\n            <PayPalImage>\r\n              <a href=\"https://www.paypal.com/paypalme/SNOofColorado\">\r\n                <SmallImage filename=\"paypal.png\" />\r\n              </a>\r\n            </PayPalImage>\r\n          </PayPal>\r\n        </LeftWrapper>\r\n        <FormWrapper>\r\n          <form\r\n            onSubmit={e => checkForm(e)}\r\n            style={{\r\n              alignContent: \"center\",\r\n              textAlign: \"center\",\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            <h4>Send us an email</h4>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Enter your name\"\r\n              style={{ width: \"100%\" }}\r\n              onChange={updateValue}\r\n            />\r\n            <br />\r\n            <br />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={values.email}\r\n              style={{ width: \"100%\" }}\r\n              onChange={updateValue}\r\n            />\r\n            <br />\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"subject\"\r\n              id=\"subject\"\r\n              placeholder=\"Enter the subject\"\r\n              value={values.subject}\r\n              style={{ width: \"100%\" }}\r\n              onChange={updateValue}\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"mapleSyrup\"\r\n              name=\"mapleSyrup\"\r\n              id=\"mapleSyrup\"\r\n              value={values.mapleSyrup}\r\n              onChange={updateValue}\r\n              className=\"mapleSyrup\"\r\n            />\r\n            <br />\r\n            <textarea\r\n              name=\"message\"\r\n              id=\"message\"\r\n              placeholder=\"Type your Message here. If inquiring about a class, please include the title of the class in your message. \"\r\n              rows=\"10\"\r\n              value={values.message}\r\n              style={{ width: \"100%\" }}\r\n              onChange={updateValue}\r\n            />\r\n            <br />\r\n            <button className=\"submit-button\" type=\"submit\">\r\n              Send\r\n            </button>\r\n          </form>\r\n          {formSent ? <h4>Thank you, your message has been sent!</h4> : null}\r\n          {errors.length !== 0\r\n            ? errors.map((error, i) => (\r\n                <p key={i}>Please fill in the {error} field.</p>\r\n              ))\r\n            : null}\r\n        </FormWrapper>\r\n      </GridWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ContactPage\r\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}