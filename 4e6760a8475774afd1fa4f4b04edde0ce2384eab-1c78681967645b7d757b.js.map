{"version":3,"sources":["webpack:///./src/components/largeImage.js"],"names":["LargeImage","props","query","render","data","image","images","edges","find","n","node","relativePath","includes","filename","imageFluid","childImageSharp","fixed","console","log","alt"],"mappings":"yMAqCeA,IAjCI,SAAAC,GAAK,OACtB,kBAAC,cAAD,CACEC,MAAK,aAiBLC,OAAQ,SAAAC,GACN,IAAMC,EAAQD,EAAKE,OAAOC,MAAMC,MAAK,SAAAC,GACnC,OAAOA,EAAEC,KAAKC,aAAaC,SAASX,EAAMY,aAE5C,IAAKR,EACH,OAAO,KAGT,IAAMS,EAAaT,EAAMK,KAAKK,gBAAgBC,MAE9C,OADAC,QAAQC,IAAIjB,GACL,kBAAC,IAAD,CAAKkB,IAAKlB,EAAMkB,IAAKH,MAAOF,KA5BvC,W","file":"4e6760a8475774afd1fa4f4b04edde0ce2384eab-1c78681967645b7d757b.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst LargeImage = props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        images: allFile {\r\n          edges {\r\n            node {\r\n              relativePath\r\n              name\r\n              childImageSharp {\r\n                fixed(width: 470, height: 300) {\r\n                  ...GatsbyImageSharpFixed\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const image = data.images.edges.find(n => {\r\n        return n.node.relativePath.includes(props.filename)\r\n      })\r\n      if (!image) {\r\n        return null\r\n      }\r\n\r\n      const imageFluid = image.node.childImageSharp.fixed\r\n      console.log(props)\r\n      return <Img alt={props.alt} fixed={imageFluid} />\r\n    }}\r\n  />\r\n)\r\nexport default LargeImage"],"sourceRoot":""}